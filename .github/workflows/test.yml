on:
  workflow_call:
    secrets:
      CHROMATIC_PROJECT_TOKEN:
        required: true

jobs:
  setenv:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      workspaces: ${{ steps.ls_public_workspaces.outputs.workspaces }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: ./yarn.lock
      - run: yarn install
      - id: ls_public_workspaces
        run: echo "::set-output name=workspaces::$(yarn node ./workspaces.js --ls-public)"
        shell: bash
  lint:
    name: "Lint Sources"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: "**/yarn.lock"
      - run: |
          yarn install
          yarn node ./bootstrap.js
        shell: bash
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: bundles_${{ github.sha }}
      - run: yarn flow-typed-install
        shell: bash
      - run: yarn flow
        shell: bash
      - run: yarn lint
        shell: bash
  test:
    name: "Test Project"
    runs-on: ubuntu-latest
    needs: setenv
    strategy:
      matrix:
        path: ${{ fromJSON(needs.setenv.outputs.workspaces).*.path }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: lts/*
          cache: yarn
          cache-dependency-path: "**/yarn.lock"
      - run: |
          yarn install
          yarn node ./bootstrap.js
      - run: yarn test --coverage --projects ${{ matrix.path }}
        shell: bash
      - uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4
        with:
          name: ${{ fromJSON(needs.setenv.outputs.workspaces)[strategy.job-index].name }}_coverage_${{ github.sha }}
          path: |
            ${{ matrix.path }}/coverage
          if-no-files-found: error
          retention-days: 1
  chromatic:
    name: "Run Visual Tests"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: bundles_${{ github.sha }}
      - uses: chromaui/action@64a9c0ca3bfb724389b0d536e544f56b7b5ff5b3 # v11
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: storybook-static
          onlyChanged: true
  coverage:
    name: "Report Coverage"
    runs-on: ubuntu-latest
    needs: [setenv, test]
    strategy:
      matrix:
        flag: ${{ fromJSON(needs.setenv.outputs.workspaces).*.name }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4
        with:
          name: ${{ matrix.flag }}_coverage_${{ github.sha }}
      - uses: codecov/codecov-action@1e68e06f1dbfde0e4cefc87efeba9e4643565303 # v5
        with:
          flags: ${{ matrix.flag }}
